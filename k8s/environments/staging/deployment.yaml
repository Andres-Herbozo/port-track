apiVersion: apps/v1
kind: Deployment
metadata:
  name: porttrack-app
  namespace: porttrack-staging
  labels:
    app.kubernetes.io/name: porttrack-app
    app.kubernetes.io/part-of: porttrack-platform
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: porttrack-app
      environment: staging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: porttrack-app
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: porttrack-app
        image: ghcr.io/porttrack/platform:staging
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "staging"
        - name: APP_NAME
          value: "PortTrack"
        - name: APP_VERSION
          value: "staging"
        - name: DB_HOST
          value: "porttrack-postgresql-staging"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "porttrack_staging"
        - name: REDIS_HOST
          value: "porttrack-redis-staging"
        - name: REDIS_PORT
          value: "6379"
        - name: ELASTICSEARCH_HOST
          value: "porttrack-elasticsearch-staging"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: METRICS_PORT
          value: "9090"
        - name: LOG_LEVEL
          value: "info"
        - name: AUTH0_DOMAIN
          valueFrom:
            secretKeyRef:
              name: porttrack-secrets-staging
              key: auth0-domain
        - name: AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: porttrack-secrets-staging
              key: auth0-client-id
        - name: AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: porttrack-secrets-staging
              key: auth0-client-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: porttrack-app-service
  namespace: porttrack-staging
  labels:
    app.kubernetes.io/name: porttrack-app
    app.kubernetes.io/part-of: porttrack-platform
    environment: staging
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: health
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: porttrack-app
    environment: staging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: porttrack-config-staging
  namespace: porttrack-staging
  labels:
    app.kubernetes.io/name: porttrack-config
    app.kubernetes.io/part-of: porttrack-platform
    environment: staging
data:
  APP_NAME: "PortTrack"
  APP_VERSION: "staging"
  APP_ENV: "staging"
  DB_HOST: "porttrack-postgresql-staging"
  DB_PORT: "5432"
  DB_NAME: "porttrack_staging"
  REDIS_HOST: "porttrack-redis-staging"
  REDIS_PORT: "6379"
  ELASTICSEARCH_HOST: "porttrack-elasticsearch-staging"
  ELASTICSEARCH_PORT: "9200"
  LOG_LEVEL: "info"
  METRICS_PORT: "9090"
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  ALERT_CPU_THRESHOLD: "75"
  ALERT_MEMORY_THRESHOLD: "75"
  ALERT_DISK_THRESHOLD: "85"
  ALERT_RESPONSE_TIME_THRESHOLD: "2500"
