input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json
  }
  
  udp {
    port => 5000
    codec => json
  }
}

filter {
  if [type] == "porttrack-app" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    mutate {
      add_field => { "service" => "porttrack-app" }
      add_field => { "environment" => "%{ENV}" }
    }
  }
  
  if [type] == "nginx" {
    grok {
      match => { "message" => "%{IPORHOST:clientip} - %{USER:ident} \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:\"(?:%{URI:referrer}|-)\"|%{QS:referrer}) %{QS:agent}" }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    
    mutate {
      add_field => { "service" => "nginx" }
    }
  }
  
  if [type] == "kubernetes" {
    mutate {
      add_field => { "service" => "kubernetes" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["porttrack-elasticsearch:9200"]
    index => "porttrack-logs-%{+YYYY.MM.dd}"
    template_name => "porttrack-logs"
    template => {
      "index_patterns" => ["porttrack-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "level" => { "type" => "keyword" }
          "service" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "message" => { "type" => "text" }
        }
      }
    }
  }
  
  stdout {
    codec => rubydebug
  }
}
